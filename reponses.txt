Exercice 02 :
1/ A/ L'attaque qui permet de casser trivialement le chiffrement dans ce cas est l'attaque CPA o√π on dispose du texte en clair et en chiffr√© et on peut choisir le text clair .
   B/ Avec un tour uniquement , le fait de connaitre les sorties de la Sbox permet de connaitre les entr√©es qui ont men√© vers les sorties , ainsi il est facile de restituer la clef de chiffrement avec d√©duction .


2/ Il ne suffit pas de r√©p√©ter les deux op√©ration pr√©c√©dentes pour casser un chiffrement √† deux tour car dans ce cas il y a un double chiffrement et on ne dispose pas de la sortie de la premi√®re sbox c'est √† dire la sortie issue du premier tour (elle est chiffr√©e et on la chiffre une seconde fois)

3/ A/ Il y a un nombre de 16 clefs de tour  possibles car : la clef est cod√©e sur 4 bits donc 2^4=16
   B/Non , il ne suffit pas de tester toutes les clefs du premier tour pour d√©duire la clef du premier tour car il faut tester la clef si elle est r√©ellement la bonne clef et pour se faire il faut faire un test IF mais on a pas de valeur pour faire le test de conditions donc m√™me si on arrive √† tester on ne saura pas si c'est la bonne clef.

4/ Si on Si on d√©finit ‚Äúune √©tape‚Äù comme l‚Äôex√©cution d‚Äôun tour de notre algorithme de chiffrement, on aura au maximum 512 √©tapes 512=2‚Å¥ * 2‚Å¥ * 2
car √† la premi√®re √©tape on a 16 clefs possibles et 16 autres √† la seconde √©tape ; et on r√©p√®te deux fois puisqu'on dispose de de deux tours.

5/ B/ On constate que l'hypoth√®se ne permet pas de v√©rifier.
   C/ Notre hypoth√®se est en fin de compte r√©fut√©e car on ne fait le test que sur un seul message et non pas sur les 16 messages possibles c'est pourqoi on doit g√©n√©rer tous les messages possibles et faire les tests pour chacun d'entre eux donc on doit multuplier le nombre d'√©tape *16 
   D/ POur rer√©pondre √† la question 4 : Il nous faut 8192 √©tapes 8192 = 2‚Å¥ * 2‚Å¥ * 2‚Å¥ * 2 .

   

Exercices 03 : 
1/Notre fonction n'est pas lin√©aire car on ne peut pas savoir d'avance le r√©sultat interm√©diaire c'est √† dire celui entre le tour1 et le tour2 car ce dernier est chiffr√© et on ne pas le trouver par observation c'est pourquoi la fonction n'est pas lin√©aire.


Exercie 04: 
2/ L'id√©e est d'avoir une fonction qui compare la parit√© du r√©sultat du premier tour qu'on appelera t et celui du second tour qu'on appelera c . A chaque fois qu'on trouve la m√™me parit√© entre t et c on incr√©mente un premier indice de 1 et si ce n'est pas le cas on d√©cr√©mente un second indice de 1 .Les meilleurs scores sont ceux qui ont la une valeur absolu du compteur  la plus √©lev√©e .(on a mis deux compteur afin de connaitres les scores maximaux en √©checs et en r√©ussites)


Exercice 05 :
1/ Pour chacun des candidats ùëò0, on peut facilement retrouver un potentiel ùëò1 :On a d√©ja eu un tableau avec les couples (message, crypt√©) chiffr√©s avec deux cl√©fs .
Donc pour chaque k0 on teste tous les k1 possibles (16) et on associe le r√©sultat  √† celui du tableau de couples(message, crypt√©) et si les r√©sultats sont √©gaux alors le k1 est le bon ainsi on aura retrouver le k1 pour chaque candidat k0.

Exercices 06 :

1/Le nombre d'√©tapes possibles est 

2/L'attaque par cryptanalyse lin√©aire demande beaucoup moins d'√©tapes que l'attaque par force brute. 

3/Je ne pense pas que les calculs necessaires pour l'approximation lin√©aires doivent √™tre pris en compte dans la complexit√© de l'attaque parcequ'il est possible de changer de fonction d'approximation lin√©aire c'est pourquoi la complexit√© de l'attaque ne les prend pas en compte .

